{
    "$ref": "AttributeRegistry.v1_1_0.json#/definitions/AttributeRegistry",
    "$schema": "redfish-schema.v1_2_0.json",
    "title": "#AttributeRegistry.v1_1_0.AttributeRegistry",
    "definitions": {
        "MapFromCondition": {
            "enum": [
                "EQU",
                "NEQ",
                "GTR",
                "GEQ",
                "LSS",
                "LEQ"
            ],
            "enumDescriptions": {
                "LEQ": "The logical operation for 'Less than or Equal'.",
                "GEQ": "The logical operation for 'Greater than or Equal'.",
                "EQU": "The logical operation for 'Equal'.",
                "LSS": "The logical operation for 'Less than'.",
                "NEQ": "The logical operation for 'Not Equal'.",
                "GTR": "The logical operation for 'Greater than'."
            },
            "type": "string"
        },
        "MapTerms": {
            "enum": [
                "AND",
                "OR"
            ],
            "enumDescriptions": {
                "AND": "The operation used for logical 'AND' of dependency terms.",
                "OR": "The operation used for logical 'OR' of dependency terms."
            },
            "type": "string"
        },
        "SupportedSystems": {
            "additionalProperties": true,
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "SystemId": {
                    "description": "The system ID of the system.",
                    "longDescription": "The value of this property shall be the system ID that identifies the computer system model that this registry applies to.",
                    "readonly": true,
                    "type": [
                        "string",
                        "null"
                    ],
                    "pattern": "^[A-Za-z0-9]+$"
                },
                "FirmwareVersion": {
                    "longDescription": "The version of the component firmware image that this registry applies to.",
                    "readonly": true,
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Firmware version."
                },
                "ProductName": {
                    "longDescription": "The value of this property shall be the product name of the computer system that this registry applies to.",
                    "readonly": true,
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "The product name of the system."
                }
            },
            "description": "A system supported by this attribute registry.",
            "longDescription": "This type shall describe a system supported by this attribute registry.",
            "type": "object"
        },
        "MapToProperty": {
            "enum": [
                "CurrentValue",
                "DefaultValue",
                "ReadOnly",
                "WriteOnly",
                "GrayOut",
                "Hidden",
                "Immutable",
                "HelpText",
                "WarningText",
                "DisplayName",
                "DisplayOrder",
                "LowerBound",
                "UpperBound",
                "MinLength",
                "MaxLength",
                "ScalarIncrement",
                "ValueExpression"
            ],
            "enumDescriptions": {
                "Hidden": "The dependency that affects an attribute's Hidden state.",
                "UpperBound": "The dependency that affects an attribute's UpperBound.",
                "ScalarIncrement": "The dependency that affects an attribute's ScalarIncrement.",
                "DisplayName": "The dependency that affects an attribute's DisplayName.",
                "MinLength": "The dependency that affects an attribute's MinLength.",
                "Immutable": "The dependency that affects an attribute's Immutable state.",
                "MaxLength": "The dependency that affects an attribute's MaxLength.",
                "DefaultValue": "The dependency that affects an attribute's DefaultValue.",
                "WarningText": "The dependency that affects an attribute's WarningText.",
                "ValueExpression": "The dependency that affects an attribute's ValueExpression.",
                "ReadOnly": "The dependency that affects an attribute's ReadOnly state.",
                "DisplayOrder": "The dependency that affects an attribute's DisplayName.",
                "LowerBound": "The dependency that affects an attribute's LowerBound.",
                "WriteOnly": "The dependency that affects an attribute's WriteOnly state.",
                "GrayOut": "The dependency that affects an attribute's GrayOut state.",
                "HelpText": "The dependency that affects an attribute's HelpText.",
                "CurrentValue": "The dependency that affects an attribute's CurrentValue."
            },
            "type": "string"
        },
        "MapFrom": {
            "additionalProperties": true,
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "MapFromProperty": {
                    "$ref": "#/definitions/MapFromProperty",
                    "longDescription": "The value of this property shall be the meta-data property of the attribute specified in MapFromAttribute that is used to evaluate this dependency expression. For example, this could be the MapFromAttribute CurrentValue, or ReadOnly state.",
                    "readonly": true,
                    "description": "The meta-data property of the attribute specified in MapFromAttribute that is used to evaluate this dependency expression."
                },
                "MapFromCondition": {
                    "$ref": "#/definitions/MapFromCondition",
                    "longDescription": "The value of this property shall be the condition that is used to evaluate this dependency expression. For example, 'EQU' or 'NEQ'.",
                    "readonly": true,
                    "description": "The condition that is used to evaluate this dependency expression."
                },
                "MapTerms": {
                    "$ref": "#/definitions/MapTerms",
                    "longDescription": "The value of this property shall be the logical term used to combine two or more MapFrom conditions in this dependency expression. For example, 'AND' for logical AND, or 'OR' for logical OR of the conditions.",
                    "readonly": true,
                    "description": "The logical term used to combine two or more MapFrom conditions in this dependency expression."
                },
                "MapFromAttribute": {
                    "description": "The attribute that is used to evaluate this dependency expression.",
                    "longDescription": "The value of this property shall be the AttributeName of the attribute that is used in evaluating this dependency expression term.",
                    "readonly": true,
                    "type": "string",
                    "pattern": "^[A-Z][A-Za-z0-9]+$"
                },
                "MapFromValue": {
                    "longDescription": "The value that the property specified in MapFromProperty (in the attribute specified in MapFromAttribute) that is used to evaluate this dependency expression.",
                    "readonly": true,
                    "type": [
                        "string",
                        "boolean",
                        "number",
                        "null"
                    ],
                    "description": "The value that the is used property specified in MapFromProperty that is used to evaluate this dependency expression."
                }
            },
            "description": "A map-from condition for mapping dependency.",
            "longDescription": "This type shall describe a map-from condition for a dependency of Type 'Map'.",
            "type": "object"
        },
        "Dependency": {
            "additionalProperties": true,
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "MapToValue": {
                    "longDescription": "The value that the property specified in MapToProperty (in the attribute specified in MapToAttribute) is changed to if the dependency expression evaluates to true.",
                    "readonly": true,
                    "type": [
                        "string",
                        "boolean",
                        "number",
                        "null"
                    ],
                    "description": "The value that MapToProperty is changed to if the dependency expression evaluates to true."
                },
                "MapToProperty": {
                    "$ref": "#/definitions/MapToProperty",
                    "longDescription": "The value of this property shall be the meta-data property of the attribute specified in MapFromAttribute that is used to evaluate this dependency expression. For example, this could be the MapFromAttribute CurrentValue, or ReadOnly state.",
                    "readonly": true,
                    "description": "The meta-data property of the attribute specified in MapFromAttribute that is used to evaluate this dependency expression."
                },
                "MapFrom": {
                    "description": "Array of the map-from conditions for mapping dependency.",
                    "longDescription": "The value of this property shall be an array containing the map-from conditions for a dependency of Type 'Map'.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MapFrom"
                    }
                },
                "MapToAttribute": {
                    "description": "The Name of the attribute that is affected by this dependency expression.",
                    "longDescription": "The value of this property shall be the AttributeName of the attribute that is affected by this dependency expression.",
                    "readonly": true,
                    "type": "string",
                    "pattern": "^[A-Z][A-Za-z0-9]+$"
                }
            },
            "description": "The dependency expression for one or more Attributes in this Attribute Registry.",
            "longDescription": "This type shall describe the dependency expression for one or more Attributes in this Attribute Registry.",
            "type": "object"
        },
        "Menus": {
            "additionalProperties": true,
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "DisplayName": {
                    "longDescription": "The value of this property shall be the user-readable display string of the menu in the defined 'Language'.",
                    "readonly": true,
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "The user-readable display string of this menu in the defined 'Language'."
                },
                "DisplayOrder": {
                    "longDescription": "The value of this property shall be a number the describes the ascending order in which this menu is displayed, relative to other menus.",
                    "readonly": true,
                    "type": [
                        "number",
                        "null"
                    ],
                    "description": "The numeric value describing the ascending order in which this menu is displayed relative to other menus."
                },
                "GrayOut": {
                    "longDescription": "The value of this property shall be a boolean describing the gray-out state of this menu. When set to true, a grayed-only menu is not accessible in user interfaces.",
                    "readonly": true,
                    "type": [
                        "boolean",
                        "null"
                    ],
                    "description": "The gray-out state of this menu. A grayed-only menu is not accessible in user interfaces."
                },
                "MenuPath": {
                    "description": "A path that describes this menu hierarchy relative to other menus.",
                    "longDescription": "The value of this property shall be a string indicating the menu hierarchy of this menu, in the form of a path to the menu names.",
                    "readonly": true,
                    "type": [
                        "string",
                        "null"
                    ],
                    "pattern": "^[.]?[A-Za-z0-9//]+$"
                },
                "ReadOnly": {
                    "longDescription": "The value of this property shall be a boolean describing the read-only state of this menu. A read-only menu is not accessible in user interfaces, and all properties contained in that menu and its sub-menus become read-only.",
                    "readonly": true,
                    "type": [
                        "boolean",
                        "null"
                    ],
                    "description": "The read-only state of this menu."
                },
                "MenuName": {
                    "description": "The unique name string of this menu.",
                    "longDescription": "The value of this property shall be the name of this menu that is unique in this registry.",
                    "readonly": true,
                    "type": "string",
                    "pattern": "^[A-Z][A-Za-z0-9]+$"
                }
            },
            "description": "A menu and its hierarchy.",
            "longDescription": "This type shall describe an attribute's menu and its hierarchy.",
            "type": "object"
        },
        "Attributes": {
            "additionalProperties": true,
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "Value": {
                    "description": "The array containing possible values for attributes of type 'Enumeration'.",
                    "longDescription": "The value of this property shall be an array containing the possible values of an attribute of type 'Enumeration'.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AttributeValue"
                    }
                },
                "ScalarIncrement": {
                    "longDescription": "The value of this property shall be a number indicating the amount to increment or decrement the value of an attribute of type 'Integer' each time a user requests a value change. A ScalarIncrement value of 0 indicates a free-form numeric user input.",
                    "readonly": true,
                    "type": [
                        "number",
                        "null"
                    ],
                    "description": "The amount to increment or decrement the value of an attribute of type 'Integer' each time a user requests a value change."
                },
                "AttributeName": {
                    "description": "The unique name of the attribute.",
                    "longDescription": "The value of this property shall be the name of this attribute that is unique in this registry.",
                    "readonly": true,
                    "type": "string",
                    "pattern": "^[A-Za-z][A-Za-z0-9_]+$"
                },
                "MinLength": {
                    "longDescription": "The value of this property shall be a number indicating the minimum character length of the value of an attribute of type 'String'.",
                    "readonly": true,
                    "type": [
                        "number",
                        "null"
                    ],
                    "description": "The minimum character length of the value of an attribute of type 'String'."
                },
                "Immutable": {
                    "longDescription": "The value of this property shall be a boolean describing the immutable state of this attribute. Immutable attributes should not be modified and are typically used to reflect a hardware state.",
                    "readonly": true,
                    "type": [
                        "boolean",
                        "null"
                    ],
                    "description": "Defines whether this attribute is immutable or not."
                },
                "MaxLength": {
                    "longDescription": "The value of this property shall be a number indicating the maximum character length of the value of an attribute of type 'String'.",
                    "readonly": true,
                    "type": [
                        "number",
                        "null"
                    ],
                    "description": "The maximum character length of the value of an attribute of type 'String'."
                },
                "ReadOnly": {
                    "longDescription": "The value of this property shall be a boolean describing the read-only state of attribute. A read-only attribute cannot be modified, and should be grayed out in user interfaces. The read-only state of an attribute might be affected by the results of evaluating the 'Dependencies' array.",
                    "readonly": true,
                    "type": [
                        "boolean",
                        "null"
                    ],
                    "description": "The read-only state of this attribute."
                },
                "IsSystemUniqueProperty": {
                    "longDescription": "The value of this property shall be a boolean describing this attribute is unique or not. A value of true indicates that the attribute is unique and should not be replicated.",
                    "readonly": true,
                    "type": [
                        "boolean",
                        "null"
                    ],
                    "description": "Defines whether this attribute is unique for this system and should not be replicated."
                },
                "ValueExpression": {
                    "longDescription": "The value of this property shall be a regular expression that is valid according to the Perl regular expression dialect. This string is used to validate the value of the attribute. This is only applicable to attributes of type 'String' or 'Integer'.",
                    "readonly": true,
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "A regular expression that is used to validate the value of the attribute. This is only applicable to attributes of type 'String' or 'Integer'."
                },
                "DisplayName": {
                    "longDescription": "The value of this property shall be the user-readable display string of the attribute in the defined 'Language'.",
                    "readonly": true,
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "The user-readable display string of the attribute in the defined 'Language'."
                },
                "WriteOnly": {
                    "longDescription": "The value of this property shall be a boolean describing the write-only state of this attribute. A write-only attribute reverts back to it's initial value after settings are applied.",
                    "readonly": true,
                    "type": [
                        "boolean",
                        "null"
                    ],
                    "description": "Defines whether this attribute is write-only. Such attributes revert back to their initial value after settings are applied."
                },
                "GrayOut": {
                    "longDescription": "The value of this property shall be a boolean describing the gray-out state of this attribute. When set to true, a grayed-out attribute should be grayed out in user interfaces. But, unlike ReadOnly, the value of grayed-out attributes might still be be modified. The grayout state of an attribute might be affected by the results of evaluating the 'Dependencies' array.",
                    "readonly": true,
                    "type": [
                        "boolean",
                        "null"
                    ],
                    "description": "The gray-out state of this attribute."
                },
                "Type": {
                    "$ref": "#/definitions/AttributeType",
                    "longDescription": "The value of this property shall be an enumeration describing type of the attribute.",
                    "readonly": true,
                    "description": "The type of the attribute."
                },
                "CurrentValue": {
                    "longDescription": "Placeholder of the current value of the attribute, to aid in evaluating dependencies. The current value of an attribute might be affected by the results of evaluating the 'Dependencies' array.",
                    "readonly": true,
                    "type": [
                        "string",
                        "boolean",
                        "number",
                        "null"
                    ],
                    "description": "Placeholder of the current value of the attribute."
                },
                "Hidden": {
                    "longDescription": "The value of this property shall be a boolean describing the visibility state of this attribute. When set to true, a hidden attribute should be hidden in user interfaces. The hidden state of an attribute might be affected by the results of evaluating the 'Dependencies' array.",
                    "readonly": true,
                    "type": [
                        "boolean",
                        "null"
                    ],
                    "description": "The hidden state of this attribute."
                },
                "UpperBound": {
                    "longDescription": "The value of this property shall be a number indicating the upper limit of the value of an attribute of type 'Integer'.",
                    "readonly": true,
                    "type": [
                        "number",
                        "null"
                    ],
                    "description": "The upper limit of the value of an attribute of type 'Integer'."
                },
                "MenuPath": {
                    "description": "A path that describes the menu hierarchy of this attribute.",
                    "longDescription": "The value of this property shall be a string indicating the menu hierarchy of this attribute, in the form of a path to the menu names.",
                    "readonly": true,
                    "type": [
                        "string",
                        "null"
                    ],
                    "pattern": "^[.]?[A-Za-z0-9//]+$"
                },
                "DefaultValue": {
                    "longDescription": "The value of this property shall be the default value of the attribute.",
                    "readonly": true,
                    "type": [
                        "string",
                        "boolean",
                        "number",
                        "null"
                    ],
                    "description": "The default current value of the attribute."
                },
                "WarningText": {
                    "longDescription": "The value of this property shall be the warning text of the attribute.",
                    "readonly": true,
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "The warning text for changing the attribute."
                },
                "DisplayOrder": {
                    "longDescription": "The value of this property shall be a number the describes the ascending order in which this attribute is displayed, relative to other attributes.",
                    "readonly": true,
                    "type": [
                        "number",
                        "null"
                    ],
                    "description": "The numeric value describing the ascending order that the attribute is displayed relative to other attributes."
                },
                "LowerBound": {
                    "longDescription": "The value of this property shall be a number indicating the lower limit of the value of an attribute of type 'Integer'.",
                    "readonly": true,
                    "type": [
                        "number",
                        "null"
                    ],
                    "description": "The lower limit of the value of an attribute of type 'Integer'."
                },
                "HelpText": {
                    "longDescription": "The value of this property shall be the help text of the attribute.",
                    "readonly": true,
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "The help text for the attribute."
                }
            },
            "description": "An attribute and its possible values.",
            "longDescription": "This type shall describe an attribute and its possible values and other metadata.",
            "type": "object"
        },
        "RegistryEntries": {
            "additionalProperties": true,
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "Attributes": {
                    "description": "The array containing the attributes and their possible values.",
                    "longDescription": "The value of this property shall be an array containing the attributes and their possible values and other metadata.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Attributes"
                    }
                },
                "Dependencies": {
                    "description": "The array containing a list of dependencies of attributes on this component.",
                    "longDescription": "The value of this property shall be an array containing a list of dependencies of attributes on this component.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Dependencies"
                    }
                },
                "Menus": {
                    "description": "The array containing the attributes menus and their hierarchy.",
                    "longDescription": "The value of this property shall be an array containing the attributes menus and their hierarchy.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Menus"
                    }
                }
            },
            "description": "List of all attributes and their metadata for this component.",
            "longDescription": "This type shall describe a list of all attributes for this component, along with their possible values, dependencies, and other metadata.",
            "type": "object"
        },
        "AttributeType": {
            "enum": [
                "Enumeration",
                "String",
                "Integer",
                "Boolean",
                "Password"
            ],
            "enumDescriptions": {
                "String": "The attributes that include free form text in their values.",
                "Password": "The attributes that include password values and are not displayed as plain text. The value shall be null for GET requests.",
                "Integer": "The attributes that have integer numeric values.",
                "Boolean": "The attributes that are true or false.",
                "Enumeration": "The attributes that include a list of the known possible enumerated values."
            },
            "type": "string"
        },
        "AttributeValue": {
            "additionalProperties": true,
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "ValueDisplayName": {
                    "longDescription": "The value of this property shall be a string representing the user-readable display string of the value of the attribute in the defined 'Language'.",
                    "readonly": true,
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "A user-readable display string of the value of the attribute in the defined 'Language'."
                },
                "ValueName": {
                    "description": "The value name of the attribute.",
                    "longDescription": "The value of this property shall be a string representing the value name of the attribute. ValueName is a unique string within the list of possible values in the 'Value' array of a given attribute.",
                    "readonly": true,
                    "type": [
                        "string",
                        "null"
                    ],
                    "pattern": "^[A-Za-z][A-Za-z0-9_]+$"
                }
            },
            "description": "A possible value for attributes of type 'Enumeration'.",
            "longDescription": "This type shall describe a possible value of an attribute of type 'Enumeration'.",
            "type": "object"
        },
        "MapFromProperty": {
            "enum": [
                "CurrentValue",
                "DefaultValue",
                "ReadOnly",
                "WriteOnly",
                "GrayOut",
                "Hidden",
                "LowerBound",
                "UpperBound",
                "MinLength",
                "MaxLength",
                "ScalarIncrement"
            ],
            "enumDescriptions": {
                "Hidden": "The dependency on an attribute's Hidden state.",
                "UpperBound": "The dependency on an attribute's UpperBound.",
                "ScalarIncrement": "The dependency on an attribute's ScalarIncrement.",
                "ReadOnly": "The dependency on an attribute's ReadOnly state.",
                "CurrentValue": "The dependency on an attribute's CurrentValue.",
                "MinLength": "The dependency on an attribute's MinLength.",
                "LowerBound": "The dependency on an attribute's LowerBound.",
                "WriteOnly": "The dependency on an attribute's WriteOnly state.",
                "GrayOut": "The dependency on an attribute's GrayOut state.",
                "MaxLength": "The dependency on an attribute's MaxLength.",
                "DefaultValue": "The dependency on an attribute's DefaultValue."
            },
            "type": "string"
        },
        "Dependencies": {
            "additionalProperties": true,
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "Type": {
                    "$ref": "#/definitions/DependencyType",
                    "longDescription": "The value of this property shall be an enumeration describing type of the attribute dependency.",
                    "readonly": true,
                    "description": "The type of the dependency structure."
                },
                "DependencyFor": {
                    "description": "The AttributeName of the attribute whose change triggers the evaluation of this dependency expression.",
                    "longDescription": "The value of this property shall be the AttributeName of the attribute whose change triggers the evaluation of this dependency expression.",
                    "readonly": true,
                    "type": "string",
                    "pattern": "^[A-Z][A-Za-z0-9]+$"
                },
                "Dependency": {
                    "$ref": "#/definitions/Dependency",
                    "longDescription": "The value of this property shall be the dependency expression for one or more Attributes in this Attribute Registry.",
                    "description": "The dependency expression for one or more Attributes in this Attribute Registry."
                }
            },
            "description": "A dependency of attributes on this component.",
            "longDescription": "This type shall describe a dependency of attributes on this component.",
            "type": "object"
        },
        "DependencyType": {
            "enum": [
                "Map"
            ],
            "enumDescriptions": {
                "Map": "A simple mapping dependency. The attribute value or state is changed to the mapped value if the condition evaluates to true."
            },
            "type": "string"
        },
        "AttributeRegistry": {
            "additionalProperties": false,
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "@odata.context": {
                    "$ref": "odata.4.0.0.json#/definitions/context"
                },
                "@odata.type": {
                    "$ref": "odata.4.0.0.json#/definitions/type"
                },
                "Name": {
                    "$ref": "Resource.json#/definitions/Name",
                    "readonly": true
                },
                "SupportedSystems": {
                    "description": "Array of systems supported by this attribute registry.",
                    "longDescription": "The value of this property shall be an array containing a list of systems supported by this attribute registry.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SupportedSystems"
                    }
                },
                "Oem": {
                    "$ref": "Resource.json#/definitions/Oem",
                    "longDescription": "The value of this string shall be of the format for the reserved word *Oem*.",
                    "description": "This is the manufacturer/provider specific extension moniker used to divide the Oem object into sections."
                },
                "Id": {
                    "$ref": "Resource.json#/definitions/Id",
                    "readonly": true
                },
                "Description": {
                    "readonly": true,
                    "anyOf": [
                        {
                            "$ref": "Resource.json#/definitions/Description"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "Language": {
                    "longDescription": "The value of this property shall be a string consisting of an RFC 5646 language code.",
                    "readonly": true,
                    "type": "string",
                    "description": "This is the RFC 5646 compliant language code for the registry."
                },
                "RegistryEntries": {
                    "$ref": "#/definitions/RegistryEntries",
                    "longDescription": "The value of this property shall a list of all attributes for this component, along with their possible values, dependencies, and other metadata.",
                    "description": "List of all attributes and their metadata for this component."
                },
                "@odata.id": {
                    "$ref": "odata.4.0.0.json#/definitions/id"
                },
                "OwningEntity": {
                    "longDescription": "The value of this property shall be a string that represents the publisher of this registry.",
                    "readonly": true,
                    "type": "string",
                    "description": "This is the organization or company that publishes this registry."
                },
                "RegistryVersion": {
                    "longDescription": "The value of this property shall be the version of this attribute registry. The format of this string shall be of the format majorversion.minorversion.errata in compliance with Protocol Version section of the Redfish specification.",
                    "readonly": true,
                    "type": "string",
                    "description": "This is the attribute registry version which is used in the middle portion of a AttributeRegistry."
                },
                "Actions": {
                    "additionalProperties": false,
                    "patternProperties": {
                        "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                            "description": "This property shall specify a valid odata or Redfish property.",
                            "type": [
                                "array",
                                "boolean",
                                "number",
                                "null",
                                "object",
                                "string"
                            ]
                        }
                    },
                    "properties": {
                        "Oem": {
                            "additionalProperties": true,
                            "patternProperties": {
                                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                                    "description": "This property shall specify a valid odata or Redfish property.",
                                    "type": [
                                        "array",
                                        "boolean",
                                        "number",
                                        "null",
                                        "object",
                                        "string"
                                    ]
                                }
                            },
                            "properties": {},
                            "description": "The available OEM specific actions for this resource.",
                            "longDescription": "This type shall contain any additional OEM actions for this resource.",
                            "type": "object"
                        }
                    },
                    "description": "The available actions for this resource.",
                    "longDescription": "The Actions property shall contain the available actions for this resource.",
                    "type": "object"
                }
            },
            "description": "An Attribute Registry is a set of key-value pairs which are specific to a particular implementation or product, such that creating standardized property names would be impractical.  This schema describes the structure of a Registry, and also includes mechanisms for building user interfaces (menus) allowing consistent navigation of the contents.",
            "longDescription": "This resource shall be used to represent an Attribute registry for a Redfish implementation.",
            "required": [
                "Id",
                "Name",
                "Language",
                "RegistryVersion",
                "OwningEntity"
            ],
            "type": "object"
        }
    },
    "copyright": "Copyright 2014-2017 Distributed Management Task Force, Inc. (DMTF). For the full DMTF copyright policy, see http://www.dmtf.org/about/policies/copyright"
}