{
    "$schema": "redfish-schema.v1_2_0.json",
    "$ref": "LogEntry.v1_2_0.json#/definitions/LogEntry",
    "copyright": "Copyright 2014-2017 Distributed Management Task Force, Inc. (DMTF). For the full DMTF copyright policy, see http://www.dmtf.org/about/policies/copyright",
    "definitions": {
        "SensorType": {
            "type": "string",
            "enum": [
                "Platform Security Violation Attempt",
                "Temperature",
                "Voltage",
                "Current",
                "Fan",
                "Physical Chassis Security",
                "Processor",
                "Power Supply / Converter",
                "PowerUnit",
                "CoolingDevice",
                "Other Units-based Sensor",
                "Memory",
                "Drive Slot/Bay",
                "POST Memory Resize",
                "System Firmware Progress",
                "Event Logging Disabled",
                "System Event",
                "Critical Interrupt",
                "Button/Switch",
                "Module/Board",
                "Microcontroller/Coprocessor",
                "Add-in Card",
                "Chassis",
                "ChipSet",
                "Other FRU",
                "Cable/Interconnect",
                "Terminator",
                "SystemBoot/Restart",
                "Boot Error",
                "BaseOSBoot/InstallationStatus",
                "OS Stop/Shutdown",
                "Slot/Connector",
                "System ACPI PowerState",
                "Watchdog",
                "Platform Alert",
                "Entity Presence",
                "Monitor ASIC/IC",
                "LAN",
                "Management Subsystem Health",
                "Battery",
                "Session Audit",
                "Version Change",
                "FRUState"
            ]
        },
        "EventSeverity": {
            "type": "string",
            "enum": [
                "OK",
                "Warning",
                "Critical"
            ]
        },
        "LogEntryCode": {
            "type": "string",
            "enum": [
                "Assert",
                "Deassert",
                "Lower Non-critical - going low",
                "Lower Non-critical - going high",
                "Lower Critical - going low",
                "Lower Critical - going high",
                "Lower Non-recoverable - going low",
                "Lower Non-recoverable - going high",
                "Upper Non-critical - going low",
                "Upper Non-critical - going high",
                "Upper Critical - going low",
                "Upper Critical - going high",
                "Upper Non-recoverable - going low",
                "Upper Non-recoverable - going high",
                "Transition to Idle",
                "Transition to Active",
                "Transition to Busy",
                "State Deasserted",
                "State Asserted",
                "Predictive Failure deasserted",
                "Predictive Failure asserted",
                "Limit Not Exceeded",
                "Limit Exceeded",
                "Performance Met",
                "Performance Lags",
                "Transition to OK",
                "Transition to Non-Critical from OK",
                "Transition to Critical from less severe",
                "Transition to Non-recoverable from less severe",
                "Transition to Non-Critical from more severe",
                "Transition to Critical from Non-recoverable",
                "Transition to Non-recoverable",
                "Monitor",
                "Informational",
                "Device Removed / Device Absent",
                "Device Inserted / Device Present",
                "Device Disabled",
                "Device Enabled",
                "Transition to Running",
                "Transition to In Test",
                "Transition to Power Off",
                "Transition to On Line",
                "Transition to Off Line",
                "Transition to Off Duty",
                "Transition to Degraded",
                "Transition to Power Save",
                "Install Error",
                "Fully Redundant",
                "Redundancy Lost",
                "Redundancy Degraded",
                "Non-redundant:Sufficient Resources from Redundant",
                "Non-redundant:Sufficient Resources from Insufficient Resources",
                "Non-redundant:Insufficient Resources",
                "Redundancy Degraded from Fully Redundant",
                "Redundancy Degraded from Non-redundant",
                "D0 Power State",
                "D1 Power State",
                "D2 Power State",
                "D3 Power State"
            ]
        },
        "LogEntryType": {
            "type": "string",
            "enum": [
                "Event",
                "SEL",
                "Oem"
            ]
        },
        "LogEntry": {
            "additionalProperties": false,
            "properties": {
                "Severity": {
                    "readonly": true,
                    "anyOf": [
                        {
                            "$ref": "#/definitions/EventSeverity"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "longDescription": "The value of this property shall be the severity of the condition resulting in the log entry, as defined in the Status section of the Redfish specificaiton.",
                    "description": "This is the severity of the log entry."
                },
                "@odata.context": {
                    "$ref": "odata.4.0.0.json#/definitions/context"
                },
                "EventId": {
                    "type": "string",
                    "readonly": true,
                    "longDescription": "If present, this LogEntry records an Event and the value shall indicate a unique identifier for the event, the format of which is implementation dependent.",
                    "description": "This is a unique instance identifier of an event."
                },
                "EntryType": {
                    "readonly": true,
                    "$ref": "#/definitions/LogEntryType",
                    "longDescription": "This property shall represent the type of LogEntry.  If the resource represents an IPMI SEL log entry, the value shall be SEL.  If the resource represents an Event log, the value shall be Event.  If the resource represents an OEM log format, the value shall be Oem.",
                    "description": "his is the type of log entry."
                },
                "@odata.type": {
                    "$ref": "odata.4.0.0.json#/definitions/type"
                },
                "EntryCode": {
                    "readonly": true,
                    "anyOf": [
                        {
                            "$ref": "#/definitions/LogEntryCode"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "longDescription": "This property shall be present if the EntryType value is SEL.  These enumerations are the values from table 42-1 and 42-2 of the IPMI specification.",
                    "description": "If the EntryType is SEL, this will have the entry code for the log entry."
                },
                "Created": {
                    "type": "string",
                    "format": "date-time",
                    "longDescription": "The value of this property shall be the time at which the log entry was created.",
                    "description": "The time the log entry was created.",
                    "readonly": true
                },
                "MessageArgs": {
                    "type": "array",
                    "readonly": true,
                    "longDescription": "This contains message arguments to be substituted into the message included or in the message looked up via a registry.",
                    "items": {
                        "type": "string"
                    },
                    "description": "The values of this property shall be any arguments for the message."
                },
                "Message": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": true,
                    "longDescription": "The value of this property shall be the Message property of the event if the EntryType is Event, the Description if EntryType is SEL and OEM Specific if the EntryType is OEM.",
                    "description": "This property decodes from EntryType:  If it is Event then it is a message string.  Otherwise, it is SEL or Oem specific.  In most cases, this will be the actual Log Entry."
                },
                "Actions": {
                    "additionalProperties": false,
                    "properties": {
                        "Oem": {
                            "additionalProperties": true,
                            "properties": {},
                            "patternProperties": {
                                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                                    "type": [
                                        "array",
                                        "boolean",
                                        "number",
                                        "null",
                                        "object",
                                        "string"
                                    ],
                                    "description": "This property shall specify a valid odata or Redfish property."
                                }
                            },
                            "type": "object",
                            "longDescription": "This type shall contain any additional OEM actions for this resource.",
                            "description": "The available OEM specific actions for this resource."
                        }
                    },
                    "patternProperties": {
                        "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                            "type": [
                                "array",
                                "boolean",
                                "number",
                                "null",
                                "object",
                                "string"
                            ],
                            "description": "This property shall specify a valid odata or Redfish property."
                        }
                    },
                    "type": "object",
                    "longDescription": "The Actions property shall contain the available actions for this resource.",
                    "description": "The available actions for this resource."
                },
                "Links": {
                    "additionalProperties": false,
                    "properties": {
                        "Oem": {
                            "$ref": "Resource.json#/definitions/Oem",
                            "longDescription": "This object represents the Oem property.  All values for resources described by this schema shall comply to the requirements as described in the Redfish specification.",
                            "description": "Oem extension object."
                        },
                        "OriginOfCondition": {
                            "readonly": true,
                            "$ref": "odata.4.0.0.json#/definitions/idRef",
                            "longDescription": "The value of this property shall be an href that references the resource for which the log is associated.",
                            "description": "This is the URI of the resource that caused the log entry."
                        }
                    },
                    "patternProperties": {
                        "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                            "type": [
                                "array",
                                "boolean",
                                "number",
                                "null",
                                "object",
                                "string"
                            ],
                            "description": "This property shall specify a valid odata or Redfish property."
                        }
                    },
                    "type": "object",
                    "longDescription": "The Links property, as described by the Redfish Specification, shall contain references to resources that are related to, but not contained by (subordinate to), this resource.",
                    "description": "Contains references to other resources that are related to this resource."
                },
                "Name": {
                    "readonly": true,
                    "$ref": "Resource.json#/definitions/Name"
                },
                "Oem": {
                    "$ref": "Resource.json#/definitions/Oem",
                    "longDescription": "The value of this string shall be of the format for the reserved word *Oem*.",
                    "description": "This is the manufacturer/provider specific extension moniker used to divide the Oem object into sections."
                },
                "SensorType": {
                    "readonly": true,
                    "anyOf": [
                        {
                            "$ref": "#/definitions/SensorType"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "longDescription": "This property shall be present if the EntryType value is SEL.",
                    "description": "If the EntryType is SEL, this will have the sensor type that the log entry pertains to."
                },
                "EventType": {
                    "readonly": true,
                    "$ref": "Event.v1_0_0.json#/definitions/EventType",
                    "longDescription": "If present, this LogEntry records an Event and the value shall indicate the type of event.",
                    "description": "This indicates the type of an event recorded in this log."
                },
                "Id": {
                    "readonly": true,
                    "$ref": "Resource.json#/definitions/Id"
                },
                "@odata.id": {
                    "$ref": "odata.4.0.0.json#/definitions/id"
                },
                "OemRecordFormat": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": true,
                    "longDescription": "The value of this property shall represent the OEM specific format of the Entry.  This property shall be required if the value of EntryType is Oem.",
                    "description": "If the entry type is Oem, this will contain more information about the record format from the Oem."
                },
                "SensorNumber": {
                    "type": [
                        "number",
                        "null"
                    ],
                    "readonly": true,
                    "longDescription": "The value of this property shall be the EntityInstance from IPMI spec if EntryType is SEL, the count of events if EntryType is Event and OEM Specific if the EntryType is OEM.",
                    "description": "This property decodes from EntryType:  If it is SEL, it is the sensor number; if Event then the count of events.  Otherwise, it is Oem specific."
                },
                "EventTimestamp": {
                    "type": "string",
                    "format": "date-time",
                    "longDescription": "If present, this LogEntry records an Event and the value shall be the time the event occurred.",
                    "description": "This is time the event occurred.",
                    "readonly": true
                },
                "MessageId": {
                    "type": "string",
                    "readonly": true,
                    "longDescription": "The value of this property shall the MessageId property of the event if the EntryType is Event, the EventData if EntryType is SEL and OEM Specific if the EntryType is OEM.  The format of this property shall be as defined in the Redfish specification.",
                    "description": "This property decodes from EntryType:  If it is Event then it is a message id.  Otherwise, it is SEL or Oem specific.  This value is only used for registries - for more information, see the specification."
                },
                "Description": {
                    "readonly": true,
                    "anyOf": [
                        {
                            "$ref": "Resource.json#/definitions/Description"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "type": [
                        "array",
                        "boolean",
                        "number",
                        "null",
                        "object",
                        "string"
                    ],
                    "description": "This property shall specify a valid odata or Redfish property."
                }
            },
            "type": "object",
            "required": [
                "Id",
                "Name",
                "EntryType"
            ],
            "longDescription": "This resource shall represent the log format for log services in a Redfish implementation.",
            "description": "This resource defines the record format for a log.  It is designed to be used for SEL logs (from IPMI) as well as Event Logs and OEM-specific log formats.  The EntryType field indicates the type of log and the resource includes several additional properties dependent on the EntryType.",
            "requiredOnCreate": [
                "EntryType"
            ]
        }
    },
    "title": "#LogEntry.v1_2_0.LogEntry"
}