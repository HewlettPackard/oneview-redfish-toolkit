{
    "$ref": "UpdateService.v1_2_0.json#/definitions/UpdateService",
    "$schema": "redfish-schema.v1_2_0.json",
    "title": "#UpdateService.v1_2_0.UpdateService",
    "definitions": {
        "UpdateService": {
            "additionalProperties": false,
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "@odata.context": {
                    "$ref": "odata.4.0.0.json#/definitions/context"
                },
                "FirmwareInventory": {
                    "longDescription": "The value of this property shall be a link to a resource of type SoftwareInventoryCollection.",
                    "readonly": true,
                    "anyOf": [
                        {
                            "$ref": "SoftwareInventoryCollection.json#/definitions/SoftwareInventoryCollection"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "An inventory of firmware."
                },
                "@odata.type": {
                    "$ref": "odata.4.0.0.json#/definitions/type"
                },
                "Status": {
                    "anyOf": [
                        {
                            "$ref": "Resource.json#/definitions/Status"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "HttpPushUri": {
                    "description": "The URI used to perform an HTTP or HTTPS push update to the Update Service.",
                    "format": "uri",
                    "readonly": true,
                    "type": "string",
                    "longDescription": "This property shall contain a URI at which the UpdateService supports an HTTP or HTTPS POST of a software image for the purpose of installing software contained within the image."
                },
                "Oem": {
                    "$ref": "Resource.json#/definitions/Oem",
                    "longDescription": "The value of this string shall be of the format for the reserved word *Oem*.",
                    "description": "This is the manufacturer/provider specific extension moniker used to divide the Oem object into sections."
                },
                "Id": {
                    "$ref": "Resource.json#/definitions/Id",
                    "readonly": true
                },
                "Description": {
                    "readonly": true,
                    "anyOf": [
                        {
                            "$ref": "Resource.json#/definitions/Description"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "Actions": {
                    "additionalProperties": false,
                    "patternProperties": {
                        "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                            "description": "This property shall specify a valid odata or Redfish property.",
                            "type": [
                                "array",
                                "boolean",
                                "number",
                                "null",
                                "object",
                                "string"
                            ]
                        }
                    },
                    "properties": {
                        "Oem": {
                            "additionalProperties": true,
                            "patternProperties": {
                                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                                    "description": "This property shall specify a valid odata or Redfish property.",
                                    "type": [
                                        "array",
                                        "boolean",
                                        "number",
                                        "null",
                                        "object",
                                        "string"
                                    ]
                                }
                            },
                            "properties": {},
                            "description": "The available OEM specific actions for this resource.",
                            "longDescription": "This type shall contain any additional OEM actions for this resource.",
                            "type": "object"
                        },
                        "#UpdateService.SimpleUpdate": {
                            "$ref": "#/definitions/SimpleUpdate"
                        }
                    },
                    "description": "The Actions object contains the available custom actions on this resource.",
                    "longDescription": "This type shall contain the available actions for this resource.",
                    "type": "object"
                },
                "Name": {
                    "$ref": "Resource.json#/definitions/Name",
                    "readonly": true
                },
                "HttpPushUriTargetsBusy": {
                    "longDescription": "This property shall be a boolean that is set by client when the HttpPushUriTargets property is being used by a client for firmware updates.  It shall provide multiple clients a way to negotiate its ownership.  This will help clients to know if a firmware update using HttpPushUriTargets is used by another client.",
                    "readonly": false,
                    "type": [
                        "boolean",
                        "null"
                    ],
                    "description": "This represents if the HttpPushUriTargets property is reserved by any client."
                },
                "@odata.id": {
                    "$ref": "odata.4.0.0.json#/definitions/id"
                },
                "ServiceEnabled": {
                    "longDescription": "The value of this property shall be a boolean indicating whether this service is enabled.",
                    "readonly": false,
                    "type": [
                        "boolean",
                        "null"
                    ],
                    "description": "This indicates whether this service is enabled."
                },
                "SoftwareInventory": {
                    "longDescription": "The value of this property shall be a link to a resource of type SoftwareInventoryCollection.",
                    "readonly": true,
                    "anyOf": [
                        {
                            "$ref": "SoftwareInventoryCollection.json#/definitions/SoftwareInventoryCollection"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "An inventory of software."
                },
                "HttpPushUriTargets": {
                    "description": "The array of URIs indicating the target for applying the update image.",
                    "longDescription": "This property shall contain zero or more URIs indicating the targets for applying the update image when using HttpPushUri to push a software image.  If this property is not present, the Service shall determine where to apply the software image.",
                    "readonly": false,
                    "type": "array",
                    "items": {
                        "format": "uri",
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                }
            },
            "description": "This is the schema definition for the Update Service. It represents the properties for the service itself and has links to collections of firmware and software inventory.",
            "longDescription": "This resource shall be used to represent an Update Service for a Redfish implementation. It represents the properties that affect the service itself.",
            "required": [
                "Id",
                "Name"
            ],
            "type": "object"
        },
        "SimpleUpdate": {
            "additionalProperties": false,
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                },
                "target": {
                    "format": "uri",
                    "type": "string",
                    "description": "Link to invoke action"
                }
            },
            "description": "This action is used to update software components.",
            "longDescription": "This action shall perform an update of installed software component(s) as contained within a software image file located at a URI referenced by the ImageURI parameter.",
            "type": "object"
        },
        "TransferProtocolType": {
            "enum": [
                "CIFS",
                "FTP",
                "SFTP",
                "HTTP",
                "HTTPS",
                "NSF",
                "SCP",
                "TFTP",
                "OEM"
            ],
            "enumDescriptions": {
                "HTTPS": "HTTP Secure protocol.",
                "HTTP": "Hypertext Transfer Protocol.",
                "FTP": "File Transfer Protocol.",
                "SCP": "Secure File Copy protocol.",
                "CIFS": "Common Internet File System protocol.",
                "NSF": "Network File System protocol.",
                "OEM": "A protocol defined by the manufacturer.",
                "SFTP": "Secure File Transfer Protocol.",
                "TFTP": "Trivial File Transfer Protocol."
            },
            "type": "string"
        }
    },
    "copyright": "Copyright 2014-2017 Distributed Management Task Force, Inc. (DMTF). For the full DMTF copyright policy, see http://www.dmtf.org/about/policies/copyright"
}