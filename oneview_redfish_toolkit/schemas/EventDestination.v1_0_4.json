{
    "$ref": "EventDestination.v1_0_4.json#/definitions/EventDestination",
    "$schema": "redfish-schema.v1_2_0.json",
    "title": "#EventDestination.v1_0_4.EventDestination",
    "definitions": {
        "EventDestinationProtocol": {
            "enum": [
                "Redfish"
            ],
            "type": "string"
        },
        "HttpHeaderProperty": {
            "additionalProperties": false,
            "patternProperties": {
                "^[^:\\s]+$": {
                    "type": "string"
                },
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {},
            "description": "The value of the HTTP header is the property value.  The header name is the property name.",
            "longDescription": "This type shall a names and value of an HTTP header to be included with every event POST to the Event Destination.",
            "type": "object"
        },
        "EventDestination": {
            "additionalProperties": false,
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "@odata.context": {
                    "$ref": "odata.4.0.0.json#/definitions/context"
                },
                "Oem": {
                    "$ref": "Resource.json#/definitions/Oem",
                    "longDescription": "The value of this string shall be of the format for the reserved word *Oem*.",
                    "description": "This is the manufacturer/provider specific extension moniker used to divide the Oem object into sections."
                },
                "Destination": {
                    "description": "The URI of the destination Event Service.",
                    "format": "uri",
                    "readonly": true,
                    "type": "string",
                    "longDescription": "This property shall contain a URI to the destination where the events will be sent."
                },
                "@odata.type": {
                    "$ref": "odata.4.0.0.json#/definitions/type"
                },
                "Name": {
                    "$ref": "Resource.json#/definitions/Name",
                    "readonly": true
                },
                "Context": {
                    "longDescription": "This property shall contain a client supplied context that will remain with the connection through the connections lifetime.",
                    "readonly": false,
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "A client-supplied string that is stored with the event destination subscription."
                },
                "Id": {
                    "$ref": "Resource.json#/definitions/Id",
                    "readonly": true
                },
                "Description": {
                    "readonly": true,
                    "anyOf": [
                        {
                            "$ref": "Resource.json#/definitions/Description"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "EventTypes": {
                    "description": "This property shall contain the types of events that shall be sent to the desination.",
                    "readonly": true,
                    "type": "array",
                    "items": {
                        "$ref": "Event.v1_0_0.json#/definitions/EventType"
                    }
                },
                "HttpHeaders": {
                    "description": "This is for setting HTTP headers, such as authorization information.  This object will be null on a GET.",
                    "longDescription": "This property shall contain an object consisting of the names and values of of HTTP header to be included with every event POST to the Event Destination.  This property shall be null on a GET.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HttpHeaderProperty"
                    }
                },
                "@odata.id": {
                    "$ref": "odata.4.0.0.json#/definitions/id"
                },
                "Protocol": {
                    "$ref": "#/definitions/EventDestinationProtocol",
                    "longDescription": "This property shall contain the protocol type that the event will use for sending the event to the destination.  A value of Redfish shall be used to indicate that the event type shall adhere to that defined in the Redfish specification.",
                    "readonly": true,
                    "description": "The protocol type of the event connection."
                }
            },
            "description": "An Event Destination desribes the target of an event subscription, including the types of events subscribed and context to provide to the target in the Event payload.",
            "required": [
                "Id",
                "Name",
                "Context"
            ],
            "type": "object",
            "requiredOnCreate": [
                "Destination",
                "EventTypes",
                "Protocol"
            ]
        }
    },
    "copyright": "Copyright 2014-2017 Distributed Management Task Force, Inc. (DMTF). For the full DMTF copyright policy, see http://www.dmtf.org/about/policies/copyright"
}